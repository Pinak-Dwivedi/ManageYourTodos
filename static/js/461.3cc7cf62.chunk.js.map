{"version":3,"file":"static/js/461.3cc7cf62.chunk.js","mappings":"4NAMe,SAASA,IAEpB,IAAAC,GAA+CC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnDC,EAAeH,EAAfG,gBAAiBC,EAAOJ,EAAPI,QAASC,EAAUL,EAAVK,WACjCC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtB,GAAGV,EACH,OAAOa,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,eAES,SAAAC,IAgD5B,OAhD4BA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA7B,SAAAC,EAA8BC,GAAC,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIZ,OAFjBP,EAAEQ,iBAEF3B,GAAW,GAAMwB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGME,MAAM,GAADC,OAAIC,wBAAgC,yBAAyB,CACvFC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB/B,MAAAA,MAED,KAAD,EATY,OAARe,EAAQI,EAAAa,KAAAb,EAAAE,KAAA,EAUKN,EAASkB,OAAO,KAAD,EAIrB,GAJPjB,EAAIG,EAAAa,KAIV3B,EAAS,CAAC,GAENW,EAAKkB,QAAQ,CAADf,EAAAE,KAAA,eACVL,EAAK,KAAD,GAEVrB,GAAW,GACXwC,EAAAA,GAAAA,QAAcnB,EAAKoB,SAASjB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAI1BxB,GAAW,GAGc,kBAAdwB,EAAAkB,GAAIjC,OAENU,EAAI,CAAC,EACXK,EAAAkB,GAAIjC,MAAMkC,SAAS,SAAAC,GAEjB,IAAI,IAAIC,KAAOD,EACfzB,EAAE0B,GAAOD,EAAIC,GAAK,EAEpB,IACAnC,EAASS,IAGXqB,EAAAA,GAAAA,MAAYhB,EAAAkB,GAAIjC,OAAO,yBAAAe,EAAAsB,OAAA,GAAA5B,EAAA,oBAE3B6B,MAAA,KAAAC,UAAA,CAED,OACIrC,EAAAA,EAAAA,KAAA,OAAKsC,UAAU,2BAA0BC,UACzCC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,sBAAsBG,SAAW,SAACjC,GAC3CpB,EAEDoB,EAAEQ,iBAzDsB,SAEL0B,GAAAvC,EAAAiC,MAAC,KAADC,UAAA,CA2DrBM,CAAenC,EACjB,EAAE+B,SAAA,EAEAvC,EAAAA,EAAAA,KAAA,OAAKsC,UAAU,yBAAwBC,SAAC,qBAExCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCvC,EAAAA,EAAAA,KAAA,SAAOsC,UAAU,4BAA4BM,QAAQ,QAAOL,SAAC,mBAC7DvC,EAAAA,EAAAA,KAAA,SAAOsC,UAAU,4BAA4BO,KAAK,OAAOC,GAAG,QAAQC,KAAK,QAAQC,YAAY,cAAcC,MAAOvD,EAAOwD,UAAQ,EAACC,SAAU,SAAC3C,GAAC,OAAKb,EAASa,EAAE4C,OAAOH,MAAM,KAC3KjD,EAAAA,EAAAA,KAAA,QAAMsC,UAAU,4BAA2BC,SAAEzC,EAAMJ,YAGrDM,EAAAA,EAAAA,KAAA,UAAQsC,UAAU,mCAAkCO,KAAK,SAAQN,SAAC,mBAI9E,C","sources":["components/forgotPassword/ForgotPassword.jsx"],"sourcesContent":["import \"./ForgotPassword.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport AuthContext from \"../../index\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport default function ForgotPassword()\r\n{\r\n    const {isAuthenticated, loading, setLoading} = useContext(AuthContext);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState({});\r\n\r\n    if(isAuthenticated)\r\n    return <Navigate to=\"/dashboard\"/>\r\n\r\n    async function forgotPassword(e)\r\n    {\r\n      e.preventDefault();\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/users/forgotpassword`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          email\r\n        })\r\n      });\r\n      const data = await response.json();\r\n\r\n      // console.log(data);\r\n\r\n      setError({});\r\n\r\n      if(!data.success)\r\n      throw data;\r\n\r\n      setLoading(false);\r\n      toast.success(data.message);\r\n        \r\n      } catch (err) {\r\n\r\n        setLoading(false);\r\n\r\n         //validation errors\r\n         if(typeof err.error === \"object\")\r\n         {\r\n           const e = {}; \r\n           err.error.forEach( err => {\r\n \r\n             for(let key in err)\r\n             e[key] = err[key][0]\r\n \r\n           });\r\n           setError(e);\r\n         }\r\n         else\r\n         toast.error(err.error);\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div className=\"forgotPassword-container\">\r\n        <form className=\"forgotPassword-form\" onSubmit={ (e) => {\r\n            if(loading)\r\n            {\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            forgotPassword(e)\r\n          }}>\r\n\r\n            <div className=\"forgotPassword-heading\">Forgot Password</div>\r\n\r\n            <div className=\"forgotPassword-form-field\">\r\n              <label className=\"forgotPassword-form-label\" htmlFor=\"email\">Email address</label>\r\n              <input className=\"forgotPassword-form-input\" type=\"text\" id=\"email\" name=\"email\" placeholder=\"Enter Email\" value={email} required onChange={(e) => setEmail(e.target.value)}/>\r\n              <span className=\"forgotPassword-form-error\">{error.email}</span>\r\n            </div>\r\n\r\n            <button className=\"forgotPassword-form-submitButton\"type=\"submit\">Send Email</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}"],"names":["ForgotPassword","_useContext","useContext","AuthContext","isAuthenticated","loading","setLoading","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","error","setError","_jsx","Navigate","to","_forgotPassword","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","data","_e","wrap","_context","prev","next","preventDefault","fetch","concat","process","method","credentials","headers","body","JSON","stringify","sent","json","success","toast","message","t0","forEach","err","key","stop","apply","arguments","className","children","_jsxs","onSubmit","_x","forgotPassword","htmlFor","type","id","name","placeholder","value","required","onChange","target"],"sourceRoot":""}