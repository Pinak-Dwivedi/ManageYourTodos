{"version":3,"file":"static/js/9.4f87d301.chunk.js","mappings":"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","sources":["components/confirmBox/ConfirmBox.jsx","components/dashboard/todoListItem/TodoListItem.jsx","components/dashboard/users/UserTodos.jsx"],"sourcesContent":["import \"./ConfirmBox.css\";\r\nimport { useEffect , useContext } from \"react\";\r\nimport AuthContext from \"../../index\";\r\n\r\nexport default function ConfirmBox({ confirmBoxRef, deleteFunction})\r\n{   \r\n    const {loading, setLoading} = useContext(AuthContext);\r\n\r\n    useEffect( () => {\r\n\r\n        if(confirmBoxRef.current == null)\r\n        return;\r\n\r\n            const timerId = setTimeout(() => {\r\n                confirmBoxRef.current.classList.remove(\"active\");\r\n            }, 5000)\r\n    \r\n            return () => {\r\n                clearTimeout(timerId)\r\n            }\r\n\r\n    }, [])\r\n\r\n    return(\r\n    <div className=\"confirmBox-overlay\">\r\n\r\n        <div ref = {confirmBoxRef} className=\"confirmBox-container\">\r\n\r\n            <div className=\"confirmBox-message\">⚠️ Are you sure! you want to delete this todo</div>\r\n\r\n            <div className=\"confirmBox-buttonsContainer\">\r\n                <button className=\"confirmBox-button confirmBox-yesButton\" onClick = { () =>\r\n                { \r\n                    if(loading)\r\n                    return false;\r\n\r\n                    deleteFunction(); \r\n                    confirmBoxRef.current.classList.remove(\"active\");\r\n\r\n                }}>Yes</button>\r\n                <button className=\"confirmBox-button confirmBox-noButton\" onClick={ () => confirmBoxRef.current.classList.remove(\"active\") }>No</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import \"./TodoListItem.css\";\r\nimport {useState, useEffect, useRef, useContext} from 'react';\r\nimport {BsFillPencilFill} from \"react-icons/bs\"\r\nimport toast from \"react-hot-toast\";\r\nimport ConfirmBox from \"../../confirmBox/ConfirmBox\";\r\nimport AuthContext from \"../../../index\";\r\n\r\nexport default function TodoListItem({setTodos, serialNo, todoId, title, body, completed})\r\n{\r\n    const {loading, setLoading} = useContext(AuthContext);\r\n\r\n    const [todoTitle, setTodoTitle] = useState(title);\r\n    const [todoBody, setTodoBody] = useState(body);\r\n    const [todoCompleted, setTodoCompleted] = useState(completed === 1 ? true : false);\r\n    const [error, setError] = useState({});\r\n    const titleRef = useRef();\r\n    const bodyRef = useRef();\r\n\r\n    const confirmBoxRef = useRef();\r\n\r\n    useEffect(()=>{\r\n        \r\n        titleRef.current.style.height = \"1px\";\r\n        titleRef.current.style.height = (1+titleRef.current.scrollHeight)+\"px\";\r\n\r\n        bodyRef.current.style.height = \"1px\";\r\n        bodyRef.current.style.height = (5+bodyRef.current.scrollHeight)+\"px\";\r\n\r\n    },[todoTitle, todoBody])\r\n\r\n    async function updateTodo()\r\n    {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/todos/${todoId}`,{\r\n                method:\"PUT\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: \"include\",\r\n                body:JSON.stringify({\r\n                    title: todoTitle,\r\n                    body: todoBody,\r\n                    completed: todoCompleted\r\n                })\r\n            })\r\n    \r\n            const data = await response.json();\r\n            setError({});\r\n\r\n            // console.log(data);\r\n            \r\n            if(!data.success)\r\n            throw data;\r\n\r\n            setLoading(false);\r\n            toast.success(data.message);\r\n\r\n        } catch (err) {\r\n            \r\n            setLoading(false);\r\n            //validation errors\r\n            if(typeof err.error === \"object\")\r\n            {\r\n                const e = {}; \r\n                err.error.forEach( err => {\r\n\r\n                    for(let key in err)\r\n                    e[key] = err[key][0]\r\n\r\n                });\r\n                setError(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function deleteTodo()\r\n    {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/todos/${todoId}`,{\r\n                method:\"DELETE\",\r\n                credentials: \"include\",\r\n            })\r\n    \r\n            const data = await response.json();\r\n\r\n            // console.log(data);\r\n\r\n            if(!data.success)\r\n            throw data;\r\n\r\n            setTodos(preTodos => {\r\n                return preTodos.filter( todo => {\r\n                    return todo.id !== data.data.todoId\r\n                })\r\n            })\r\n            \r\n            setLoading(false);\r\n            toast.success(data.message);\r\n\r\n        } catch (err) {\r\n\r\n            setLoading(false);\r\n            // console.log(err)\r\n            toast.error(err.message);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <>\r\n        <ConfirmBox confirmBoxRef = {confirmBoxRef} deleteFunction = {deleteTodo}/>\r\n\r\n        <div className=\"todos-list-item\">\r\n            <div className=\"todos-list-item-todoSerialNo\">{serialNo}\r\n\r\n            <div className=\"checkBox-container\">\r\n                <input className=\"checkBox-input\" type=\"checkbox\" checked = {todoCompleted} onChange={(e) => setTodoCompleted(e.target.checked)}/>\r\n                <label className=\"checkBox-label\"></label>\r\n            </div>\r\n            \r\n            </div>\r\n\r\n            <div className=\"todos-list-item-todoTitle\">\r\n\r\n                <div className=\"todoContent-wrapper\">\r\n                    <BsFillPencilFill/>\r\n                    <textarea ref={titleRef} className=\"todoTitle-content\" type=\"text\" value={todoTitle} onChange={ (e) => setTodoTitle(e.target.value) }></textarea>\r\n                </div>\r\n                <span className=\"updateTodo-error\">{error.title}</span>\r\n\r\n            </div>\r\n\r\n            <div className=\"todos-list-item-todoBody\">\r\n\r\n                <div className=\"todoContent-wrapper\">\r\n                    <BsFillPencilFill/>\r\n                    <textarea ref={bodyRef} className=\"todoBody-content\" type=\"text\" value={todoBody} onChange={ (e) => setTodoBody(e.target.value) }></textarea>\r\n                </div>\r\n                <span className=\"updateTodo-error\">{error.body}</span>\r\n\r\n            </div>\r\n            \r\n            <div className=\"todos-list-item-todoButtons\">\r\n                <button className=\"todos-list-item-updateTodoButton\" onClick={ () => {\r\n                    if(loading)\r\n                    return false;\r\n\r\n                    updateTodo();\r\n\r\n                }}>Update</button>\r\n                <button className=\"todos-list-item-deleteTodoButton\" onClick={ () => confirmBoxRef.current.classList.add(\"active\") }>Delete</button>\r\n            </div>\r\n        </div>  \r\n    </>\r\n    )\r\n}","import { useParams, useLocation, Navigate, useNavigate } from \"react-router-dom\"\r\nimport {useState, useEffect, useContext} from \"react\";\r\nimport TodoListItem from \"../todoListItem/TodoListItem\";\r\nimport AuthContext from \"../../../index\";\r\n\r\nexport default function UserTodos()\r\n{\r\n    const {authUser, isAuthenticated} = useContext(AuthContext);\r\n\r\n    const {id} = useParams();\r\n    const [userTodos, setUserTodos] = useState([]);\r\n    const location = useLocation();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()=>{\r\n\r\n        (async function fetchTodos()\r\n        {\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/todos?id=${id}`,{\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                // console.log(data);\r\n\r\n                if(!data.success)\r\n                throw data;\r\n                \r\n                setUserTodos(data.data);\r\n\r\n            } catch (error) {                \r\n                // console.log(error);\r\n            }\r\n\r\n        })();\r\n\r\n    },[])\r\n    \r\n    if(authUser.role == null || !isAuthenticated)\r\n    return <Navigate to=\"/\"/>\r\n\r\n    return(\r\n        <div className=\"userTodos-container\">\r\n            <div className=\"userTodos-heading\">{location.state != null ? location.state.userName+\"'s\" : null} Todos</div>\r\n            <button className=\"userTodos-addTodoButton\" onClick={ () => navigate(\"/addtodo\", {state: {userId : id}}) }>ADD TODO</button>\r\n\r\n            <div className=\"userTodos-list\">\r\n                {userTodos.map( (userTodo, index) => {\r\n                    return(\r\n                    <TodoListItem key={userTodo.id} setTodos = {setUserTodos} serialNo={index+1} todoId = {userTodo.id} title={userTodo.title} body={userTodo.body} completed={userTodo.completed}/>\r\n                    )\r\n                })}   \r\n            </div>  \r\n        </div>\r\n    )\r\n}"],"names":["ConfirmBox","_ref","confirmBoxRef","deleteFunction","_useContext","useContext","AuthContext","loading","setLoading","useEffect","current","timerId","setTimeout","classList","remove","clearTimeout","_jsx","className","children","_jsxs","ref","onClick","TodoListItem","setTodos","serialNo","todoId","title","body","completed","_useState","useState","_useState2","_slicedToArray","todoTitle","setTodoTitle","_useState3","_useState4","todoBody","setTodoBody","_useState5","_useState6","todoCompleted","setTodoCompleted","_useState7","_useState8","error","setError","titleRef","useRef","bodyRef","_updateTodo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","e","wrap","_context","prev","next","fetch","concat","process","method","headers","credentials","JSON","stringify","sent","json","success","toast","message","t0","forEach","err","key","stop","apply","arguments","_deleteTodo","_callee2","_context2","preTodos","filter","todo","id","style","height","scrollHeight","_Fragment","type","checked","onChange","target","BsFillPencilFill","value","updateTodo","add","UserTodos","authUser","isAuthenticated","useParams","userTodos","setUserTodos","location","useLocation","navigate","useNavigate","_fetchTodos","role","state","userName","userId","map","userTodo","index","Navigate","to"],"sourceRoot":""}