{"version":3,"file":"static/js/562.09b12521.chunk.js","mappings":"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","sources":["components/resetPassword/ResetPassword.jsx"],"sourcesContent":["import \"./ResetPassword.css\";\r\nimport {useState, useContext} from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport {useParams, Navigate, useNavigate} from \"react-router-dom\";\r\nimport AuthContext from \"../../index\";\r\n\r\n\r\nexport default function ResetPassword()\r\n{\r\n    const {isAuthenticated, loading, setLoading} = useContext(AuthContext);\r\n    const[password, setPassword] = useState(\"\");\r\n    const[confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState({});\r\n    const navigate = useNavigate();\r\n\r\n    const {id, token} = useParams();\r\n\r\n\r\n    if(isAuthenticated)\r\n    return <Navigate to=\"/dashboard\"/>\r\n\r\n    async function resetPassword(e)\r\n    {\r\n      e.preventDefault();\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n          const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/users/resetpassword/${id}/${token}`, {\r\n            method: \"PATCH\",\r\n            credentials: \"include\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n              password,\r\n              confirmPassword\r\n            })\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          // console.log(data);\r\n\r\n          setError({});\r\n\r\n          if(!data.success)\r\n          throw data;\r\n\r\n          navigate(\"/\");\r\n          setLoading(false);\r\n          toast.success(data.message);\r\n\r\n      } catch (err) {\r\n\r\n        setLoading(false);\r\n\r\n\r\n        //validation errors\r\n          if(typeof err.error === \"object\")\r\n          {\r\n            const e = {}; \r\n            err.error.forEach( err => {\r\n\r\n              for(let key in err)\r\n              e[key] = err[key][0]\r\n\r\n            });\r\n            setError(e);\r\n          }\r\n          else\r\n          toast.error(err.error);\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div className=\"resetPassword-container\">\r\n          <form className=\"resetPassword-form\" onSubmit={ (e) => {\r\n\r\n              if(loading)\r\n              {\r\n                e.preventDefault();\r\n                return;\r\n              }\r\n\r\n              resetPassword(e);\r\n            }}>\r\n\r\n            <div className=\"resetPassword-heading\">Reset Password</div>\r\n\r\n            <div className=\"resetPassword-form-field\">\r\n              <label className=\"resetPassword-form-label\" htmlFor=\"password\">Password</label>\r\n              <input className=\"resetPassword-form-input\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter Password\" value={password} required onChange={(e) => setPassword(e.target.value)}/>\r\n              <span className=\"resetPassword-form-error\">{error.password}</span>\r\n            </div>\r\n\r\n            <div className=\"resetPassword-form-field\">\r\n              <label className=\"resetPassword-form-label\" htmlFor=\"confirmPassword\">Re-Enter Password</label>\r\n              <input className=\"resetPassword-form-input\" type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"Re-Enter Password\" value={confirmPassword} required onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n              <span className=\"resetPassword-form-error\">{error.confirmPassword}</span>\r\n            </div>\r\n\r\n            <button className=\"resetPassword-form-submitButton\"type=\"submit\">Sign Up</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}"],"names":["ResetPassword","_useContext","useContext","AuthContext","isAuthenticated","loading","setLoading","_useState","useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","error","setError","navigate","useNavigate","_useParams","useParams","id","token","_jsx","Navigate","to","_resetPassword","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","data","_e","wrap","_context","prev","next","preventDefault","fetch","concat","process","method","credentials","headers","body","JSON","stringify","sent","json","success","toast","message","t0","forEach","err","key","stop","apply","arguments","className","children","_jsxs","onSubmit","_x","resetPassword","htmlFor","type","name","placeholder","value","required","onChange","target"],"sourceRoot":""}