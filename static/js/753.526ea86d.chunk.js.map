{"version":3,"file":"static/js/753.526ea86d.chunk.js","mappings":"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","sources":["components/register/Register.jsx"],"sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport './Register.css';\r\nimport { Link, useNavigate, Navigate } from 'react-router-dom';\r\nimport AuthContext from '../../index';\r\nimport toast from \"react-hot-toast\";\r\n\r\n\r\nfunction Register()\r\n{\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [profileImage, setProfileImage] = useState();\r\n    const [error, setError] = useState({});\r\n\r\n    const {setAuthUser, isAuthenticated, setIsAuthenticated, loading, setLoading} = useContext(AuthContext);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    if(isAuthenticated)\r\n    return <Navigate to=\"/dashboard\"/>\r\n  \r\n    async function register(event)\r\n    {\r\n      event.preventDefault();\r\n      \r\n      const formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"email\", email);\r\n      formData.append(\"password\", password);\r\n      formData.append(\"confirmPassword\", confirmPassword);\r\n      formData.append(\"profileImage\", profileImage);\r\n\r\n      \r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/users`,{\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        body: formData\r\n      })\r\n      const data = await response.json();\r\n\r\n      setError({})\r\n\r\n      // console.log(data)\r\n      \r\n      if(!data.success)\r\n      throw data;\r\n\r\n\r\n      setIsAuthenticated(true);\r\n      setAuthUser(data.user);\r\n\r\n      navigate(\"/dashboard\")\r\n      setLoading(false);\r\n      toast.success(data.message);\r\n\r\n      } catch (err) {\r\n\r\n        setIsAuthenticated(false);\r\n        setAuthUser({});\r\n        setLoading(false);\r\n\r\n        //validation errors\r\n        if(typeof err.error === \"object\")\r\n        {\r\n          const e = {}; \r\n          err.error.forEach( err => {\r\n\r\n            for(let key in err)\r\n            e[key] = err[key][0]\r\n\r\n          });\r\n          setError(e);\r\n        }\r\n        else if(err.error === \"Only png|jpg|jpeg file formats are allowed\")\r\n        setError({\r\n          profileImage: \"Only png|jpg|jpeg file formats are allowed\"\r\n        })\r\n\r\n        else\r\n        toast.error(err.error);\r\n      }\r\n    }\r\n  \r\n    return (\r\n        <div className=\"register-container\">\r\n          <form className=\"register-form\" encType=\"multipart/form-data\" onSubmit={ (e) => {\r\n            if(loading)\r\n            {\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            register(e)\r\n          }}>\r\n\r\n            <div className=\"register-heading\">Sign Up</div>\r\n\r\n            <div className=\"register-form-field\">\r\n              <label className=\"register-form-label\" htmlFor=\"name\">Name</label>\r\n              <input className=\"register-form-input\" type=\"text\" id=\"name\" name=\"text\" placeholder=\"Enter Name\" value={name} required onChange={(e) => setName(e.target.value)}/>\r\n              <span className=\"register-form-error\">{error.name}</span>\r\n            </div>\r\n\r\n            <div className=\"register-form-field\">\r\n              <label className=\"register-form-label\" htmlFor=\"email\">Email address</label>\r\n              <input className=\"register-form-input\" type=\"text\" id=\"email\" name=\"email\" placeholder=\"Enter Email\" value={email} required onChange={(e) => setEmail(e.target.value)}/>\r\n              <span className=\"register-form-error\">{error.email}</span>\r\n            </div>\r\n\r\n            <div className=\"register-form-field\">\r\n              <label className=\"register-form-label\" htmlFor=\"password\">Password</label>\r\n              <input className=\"register-form-input\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter Password\" value={password} required onChange={(e) => setPassword(e.target.value)}/>\r\n              <span className=\"register-form-error\">{error.password}</span>\r\n            </div>\r\n\r\n            <div className=\"register-form-field\">\r\n              <label className=\"register-form-label\" htmlFor=\"confirmPassword\">Re-Enter Password</label>\r\n              <input className=\"register-form-input\" type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"Re-Enter Password\" value={confirmPassword} required onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n              <span className=\"register-form-error\">{error.confirmPassword}</span>\r\n            </div>\r\n\r\n            <div className=\"register-form-field\">\r\n            <label className=\"register-form-label image-label\" htmlFor=\"profileImage\">Profile Image</label>\r\n            <input className=\"register-form-input\" type=\"file\" id=\"profileImage\" name=\"profileImage\" onChange={(e) => setProfileImage(e.target.files[0])}/>\r\n            <span className=\"register-form-error\">{error.profileImage}</span>\r\n            \r\n            </div>\r\n\r\n            <button className=\"register-form-submitButton\"type=\"submit\">Sign Up</button>\r\n\r\n            <div className='already-have-account'>\r\n                Already have an account? <Link className=\"already-have-account-link\" to=\"/login\">LogIn</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","profileImage","setProfileImage","_useState11","_useState12","error","setError","_useContext","useContext","AuthContext","setAuthUser","isAuthenticated","setIsAuthenticated","loading","setLoading","navigate","useNavigate","_jsx","Navigate","to","_register","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","response","data","e","wrap","_context","prev","next","preventDefault","FormData","append","fetch","concat","process","method","credentials","body","sent","json","success","user","toast","message","t0","forEach","err","key","stop","apply","arguments","className","children","_jsxs","encType","onSubmit","_x","register","htmlFor","type","id","placeholder","value","required","onChange","target","files","Link"],"sourceRoot":""}